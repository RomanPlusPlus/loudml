[[api-models]]
== Models API

This section contains a detailed description of the model CRUD APIs.
The APIs support similar functions found in the model CLI, including:

* <<cli-create-model,Creating a model>>
* <<cli-delete-model,Deleting a model>>
* <<cli-list-models,Listing existing models>>
* Running a new job to train the model
* Running periodic inference with new data

=== Create Model API

A new model can be defined using the `PUT` method and
defining model parameters inside the request body using
Loud ML <<feature-dsl, feature description language>>. 

[source,js]
--------------------------------------------------
PUT /models
{
   ...feature description language
}
--------------------------------------------------

Using curl:

[source,bash]
--------------------------------------------------
curl -H "Content-Type: application/json" -X PUT localhost:8077/models --data-binary @model.json
--------------------------------------------------

[NOTE]
==================================================

The HTTP content type must be `application/json`

==================================================

=== Delete Model API

To delete the model named `cpu_and_mem-model`, use the DELETE method:

[source,js]
--------------------------------------------------
DELETE /models/cpu_and_mem-model
--------------------------------------------------

=== List Models API

To list all existing models use the GET method:

[source,js]
--------------------------------------------------
GET /models
--------------------------------------------------

=== Train Model API

To start a training job for a given model you must specify a date
range in the url parameters. The `from` and `to` parameters
support <<date-math>> format and operations.

[source,js]
--------------------------------------------------
POST /models/cpu_and_mem-model/_train?from=<range_start>&to=<range_end>
--------------------------------------------------

On success, it will return a job identifier.

[source,js]
--------------------------------------------------
* HTTP 1.0, assume close after body
< HTTP/1.0 200 OK
< Content-Type: application/json
< Content-Length: 39
< Server: Werkzeug/0.12.2 Python/3.4.5
< Date: Fri, 26 Jan 2018 22:39:30 GMT
< 
"624e7ab7-2a87-44b3-9d2f-ddf6bace84d7"
--------------------------------------------------

[NOTE]
==================================================

The `_train` command starts an asynchronous job in the 
background. The current status for this job can be obtained
by polling the <<api-jobs>> API.

==================================================

=== Activate Model API

After training, you can start a model in order to output
predictions every `bucket_interval`. The predicted values
will automatically be written to your data source. 

[source,js]
--------------------------------------------------
POST /models/cpu_and_mem-model/_start
--------------------------------------------------

This task can be stopped using `_stop`:

[source,js]
--------------------------------------------------
POST /models/cpu_and_mem-model/_stop
--------------------------------------------------

[WARNING]
==================================================

This functionality is experimental and may be changed or
removed completely in a future release. Please note
that version {version} is a beta release and is intended
for testing purposes only.

==================================================

